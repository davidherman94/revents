[{"path":"https://davidherman94.github.io/revents/articles/conditional_models.html","id":"cox-proportional-hazard-model-coxph","dir":"Articles","previous_headings":"","what":"Cox proportional hazard model (CoxPH)","title":"06. Conditional models in recurrent events","text":"time first event analyses (.e. classical cox regression), risk set restricted first event relapses. Thus, working recurrent event data, risk set specified using subset SEVENT == 1. can seen CoxPH model gives decreasing risk relapses 40% SPMS group compared RRMS group. important consider model ignoring events precede 1st events. order account , can use recurrent events models:","code":"cox.relapses <- coxph(Surv(TSTART, TSTOP, STATUS) ~ DISEASE_COURSE + AGE + SEX                        + RACE + TIME_SINCE_DIAGNOSIS, ties = \"breslow\",                        data = subset(data_layout_1, SEVENT == 1))  cox.relapses #> Call: #> coxph(formula = Surv(TSTART, TSTOP, STATUS) ~ DISEASE_COURSE +  #>     AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS, data = subset(data_layout_1,  #>     SEVENT == 1), ties = \"breslow\") #>  #>                            coef  exp(coef)   se(coef)      z        p #> DISEASE_COURSESPMS   -0.5065415  0.6025760  0.1169950 -4.330 1.49e-05 #> AGE                   0.0001745  1.0001746  0.0045354  0.038   0.9693 #> SEXMale               0.1992437  1.2204793  0.0883283  2.256   0.0241 #> RACEWhite            -0.1131750  0.8929943  0.1414812 -0.800   0.4238 #> TIME_SINCE_DIAGNOSIS  0.0032136  1.0032188  0.0019227  1.671   0.0946 #>  #> Likelihood ratio test=33.5  on 5 df, p=2.997e-06 #> n= 1313, number of events= 565"},{"path":"https://davidherman94.github.io/revents/articles/conditional_models.html","id":"andersen-gill-ag-model","dir":"Articles","previous_headings":"","what":"ANDERSEN-GILL (AG) model","title":"06. Conditional models in recurrent events","text":"classical cox extension model recurrent event data assumes events independent hazard ratio constant time. Adjusting covariates (case time-dependent covariates) considering events, AG model shows risk relapse SPMS group 44% lower RRMS group. important mention AG model can also fitted robust = TRUE take account correlations among events provides robust standard errors (applied example).","code":"ag.relapses <- coxph(Surv(TSTART, TSTOP, STATUS) ~ DISEASE_COURSE + AGE +                        SEX + RACE + TIME_SINCE_DIAGNOSIS, data = data_layout_1)  ag.relapses %>% tidy(exp = TRUE, conf.int = TRUE) #> # A tibble: 5 × 7 #>   term                 estimate std.error statistic  p.value conf.low conf.high #>   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 DISEASE_COURSESPMS      0.564  0.0404     -14.2   1.44e-45    0.522     0.611 #> 2 AGE                     1.00   0.00152      1.88  6.02e- 2    1.00      1.01  #> 3 SEXMale                 0.980  0.0305      -0.667 5.05e- 1    0.923     1.04  #> 4 RACEWhite               1.12   0.0525       2.11  3.47e- 2    1.01      1.24  #> 5 TIME_SINCE_DIAGNOSIS    1.00   0.000759     1.50  1.35e- 1    1.00      1.00"},{"path":"https://davidherman94.github.io/revents/articles/conditional_models.html","id":"pwp-tt-or-ct-model-overall-effect","dir":"Articles","previous_headings":"","what":"PWP TT (or CT) model (overall effect)","title":"06. Conditional models in recurrent events","text":"PWP model turns useful model dependency events become relevant account. model add strata term model, allows account dependency events obtaining overall effect. analyses performed based restricted risk sets (risk set involves number previous events) calendar time scale, PWP gives HR:0.57 SPMS group compared RRMS group.","code":"pwp.tt.relapses <- coxph(Surv(TSTART, TSTOP, STATUS) ~ DISEASE_COURSE +                             AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS +                             strata(STATUS), data = data_layout_1)  pwp.tt.relapses #> Call: #> coxph(formula = Surv(TSTART, TSTOP, STATUS) ~ DISEASE_COURSE +  #>     AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS + strata(STATUS),  #>     data = data_layout_1) #>  #>                            coef  exp(coef)   se(coef)       z       p #> DISEASE_COURSESPMS   -0.5459158  0.5793110  0.0401215 -13.607 < 2e-16 #> AGE                   0.0028041  1.0028080  0.0015296   1.833 0.06678 #> SEXMale              -0.0427495  0.9581514  0.0305230  -1.401 0.16134 #> RACEWhite             0.1621498  1.1760364  0.0525550   3.085 0.00203 #> TIME_SINCE_DIAGNOSIS  0.0008012  1.0008015  0.0007341   1.091 0.27512 #>  #> Likelihood ratio test=272.3  on 5 df, p=< 2.2e-16 #> n= 6347, number of events= 5092"},{"path":"https://davidherman94.github.io/revents/articles/conditional_models.html","id":"pwp-gt-model-overall-effect","dir":"Articles","previous_headings":"","what":"PWP GT model (overall effect)","title":"06. Conditional models in recurrent events","text":"PWP model can also used account inter-event dependence time scale gap time scale. model useful time events interest renewal event (.e. participant returns previous state , example, diseases community develop first event). gap time scale used, PWP model gives HR:0.56 SPMS group compared RRMS group.","code":"pwp.gt.relapses <- coxph(Surv(TGAP, STATUS) ~ DISEASE_COURSE + AGE + SEX                          + RACE + TIME_SINCE_DIAGNOSIS +                            strata(STATUS), data = data_layout_1)  pwp.gt.relapses #> Call: #> coxph(formula = Surv(TGAP, STATUS) ~ DISEASE_COURSE + AGE + SEX +  #>     RACE + TIME_SINCE_DIAGNOSIS + strata(STATUS), data = data_layout_1) #>  #>                            coef  exp(coef)   se(coef)       z       p #> DISEASE_COURSESPMS   -0.5636383  0.5691346  0.0408425 -13.800 < 2e-16 #> AGE                   0.0028712  1.0028754  0.0015265   1.881 0.05998 #> SEXMale              -0.0327096  0.9678196  0.0305313  -1.071 0.28401 #> RACEWhite             0.1422456  1.1528598  0.0526099   2.704 0.00686 #> TIME_SINCE_DIAGNOSIS  0.0011251  1.0011257  0.0007544   1.491 0.13586 #>  #> Likelihood ratio test=271.4  on 5 df, p=< 2.2e-16 #> n= 6347, number of events= 5092"},{"path":"https://davidherman94.github.io/revents/articles/conditional_models.html","id":"frailty-model","dir":"Articles","previous_headings":"","what":"Frailty model","title":"06. Conditional models in recurrent events","text":"frailty model, introduces random covariate frailty term model induces dependence among recurrent event times. Conditional unmeasured heterogeneity covariates, frailty model indicates SPMS group reducing risk 23% RRMS (HR: 0.77; 95% CI: 0.71, 0.83). order verify use frailty models justified study, possible use emfrail function frailtyEM package getting frailty variance Kendall’s tau. variance close 0 means heterogeneity patients. example, heterogeneity, use frailty models justified. differences detected frailty model estimates conditional models may due model assumptions rather heterogeneity.","code":"frailty.relapses <- coxph(Surv(TSTOP, STATUS) ~ DISEASE_COURSE + AGE + SEX                           + RACE + TIME_SINCE_DIAGNOSIS + frailty(ID),                           data = data_layout_1)  tidy(frailty.relapses, exp = TRUE, conf.int = TRUE) #> # A tibble: 6 × 7 #>   term                 estimate std.error statistic  p.value conf.low conf.high #>   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 DISEASE_COURSESPMS      0.774  0.0404   40.0      2.57e-10    0.715     0.838 #> 2 AGE                     1.00   0.00152   0.156    6.93e- 1    0.998     1.00  #> 3 SEXMale                 0.999  0.0305    0.000679 9.79e- 1    0.941     1.06  #> 4 RACEWhite               1.01   0.0525    0.0431   8.35e- 1    0.912     1.12  #> 5 TIME_SINCE_DIAGNOSIS    1.00   0.000761  2.17     1.40e- 1    1.00      1.00  #> 6 frailty(ID)            NA     NA         0.000620 8.54e- 1   NA        NA frailty_var <- emfrail(Surv(TSTOP, STATUS) ~ cluster(ID) + DISEASE_COURSE                        + AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS,                         data = data_layout_1)   summary(frailty_var) #> Call:  #> emfrail(formula = Surv(TSTOP, STATUS) ~ cluster(ID) + DISEASE_COURSE +  #>     AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS, data = data_layout_1) #>  #> Regression coefficients: #>                           coef exp(coef)  se(coef)         z    p #> DISEASE_COURSESPMS   -0.255557  0.774485  0.040421 -6.322322 0.00 #> AGE                   0.000600  1.000600  0.001519  0.394967 0.69 #> SEXMale              -0.000795  0.999205  0.030528 -0.026038 0.98 #> RACEWhite             0.010910  1.010969  0.052527  0.207696 0.84 #> TIME_SINCE_DIAGNOSIS  0.001122  1.001123  0.000761  1.474168 0.14 #> Estimated distribution: gamma / left truncation: FALSE  #>  #> Fit summary: #> Commenges-Andersen test for heterogeneity: p-val  1.55e-145  #> no-frailty Log-likelihood: -39801.63  #> Log-likelihood: -39801.63  #> LRT: 1/2 * pchisq(0), p-val>0.5 #>  #> Frailty summary: #>                    estimate lower 95% upper 95% #> Var[Z]                 0.00     0.000     0.001 #> Kendall's tau          0.00     0.000     0.001 #> Median concordance     0.00     0.000     0.000 #> E[logZ]                0.00    -0.001     0.000 #> Var[logZ]              0.00     0.000     0.001 #> theta              38444.34   998.132       Inf #> Confidence intervals based on the likelihood function"},{"path":"https://davidherman94.github.io/revents/articles/count_based_models.html","id":"poisson-regression","dir":"Articles","previous_headings":"","what":"Poisson regression","title":"05. Count-based models in recurrent events","text":"Poisson model can used baseline model recurrent events data. However, Poisson model assumes mean variance equal, always case recurrent events data account dependence events event timing. standard Poisson regression model, mean variance assumed equal. calculating underdispersion overdispersion ratio, need calculate residual deviance residual degrees freedom. ratio calculated ratio residual deviance residual degrees freedom. dispersion ratio different 1, Poisson model recommended. However, quasi-Poisson model corrects overdispersion incorporating dispersion parameter scales variance, providing accurate estimates.","code":"poisson.relapses <- glm(   COUNT ~ offset(log(LENGHT.TIME)) + DISEASE_COURSE + AGE + SEX +  RACE + TIME_SINCE_DIAGNOSIS,    family = poisson(link = \"log\"),    data = data_layout_3)  tidy(poisson.relapses, exp = TRUE, conf.int = TRUE)  #> # A tibble: 6 × 7 #>   term                 estimate std.error statistic  p.value conf.low conf.high #>   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 (Intercept)             0.376  0.0760     -12.9   7.10e-38    0.324     0.436 #> 2 DISEASE_COURSESPMS      0.564  0.0404     -14.2   1.44e-45    0.521     0.611 #> 3 AGE                     1.00   0.00152      1.88  6.02e- 2    1.00      1.01  #> 4 SEXMale                 0.980  0.0305      -0.667 5.05e- 1    0.923     1.04  #> 5 RACEWhite               1.12   0.0525       2.11  3.47e- 2    1.01      1.24  #> 6 TIME_SINCE_DIAGNOSIS    1.00   0.000759     1.50  1.35e- 1    1.00      1.00 # Get the residual degrees of freedom residual_deviance <- deviance(poisson.relapses) residual_df <- df.residual(poisson.relapses)   # Calculate the ratio over.under.dispersion_ratio <- residual_deviance / residual_df over.under.dispersion_ratio #> [1] 0.6508522"},{"path":"https://davidherman94.github.io/revents/articles/count_based_models.html","id":"quassi-poisson-model","dir":"Articles","previous_headings":"","what":"Quassi-poisson model","title":"05. Count-based models in recurrent events","text":"Although estimated coefficients similar Poisson model, quasi-Poisson model provides accurate estimates accounting underspersion. differences can found 95% CI coefficients.","code":"qpoisson.relapses <- glm(   COUNT ~ offset(log(LENGHT.TIME)) + DISEASE_COURSE + AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS,   family = quasipoisson(link = \"log\"),   data = data_layout_3)  tidy(qpoisson.relapses, exp = TRUE, conf.int = TRUE)  #> # A tibble: 6 × 7 #>   term                 estimate std.error statistic  p.value conf.low conf.high #>   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 (Intercept)             0.376  0.0605     -16.2   8.49e-54    0.334     0.423 #> 2 DISEASE_COURSESPMS      0.564  0.0321     -17.8   9.72e-64    0.530     0.601 #> 3 AGE                     1.00   0.00121      2.36  1.83e- 2    1.00      1.01  #> 4 SEXMale                 0.980  0.0243      -0.839 4.02e- 1    0.934     1.03  #> 5 RACEWhite               1.12   0.0418       2.66  8.02e- 3    1.03      1.21  #> 6 TIME_SINCE_DIAGNOSIS    1.00   0.000603     1.88  6.01e- 2    1.00      1.00"},{"path":"https://davidherman94.github.io/revents/articles/count_based_models.html","id":"negative-binomial-model","dir":"Articles","previous_headings":"","what":"Negative Binomial model","title":"05. Count-based models in recurrent events","text":"NB regression provides improved model recurrent events data compared Poisson regression model assumes individual underlying event rate time also may include random component accounting subject heterogeneity. study, constant relapse rate (see descriptive analyses), use NB model can accurate recommended also ability account underdispersion heterogeneity. However, NB model consider event timing.","code":"nb.relapses <- glm.nb(   COUNT ~ offset(log(LENGHT.TIME)) + DISEASE_COURSE + AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS,   data = data_layout_3)  tidy(nb.relapses, exp = TRUE, conf.int = TRUE)  #> # A tibble: 6 × 7 #>   term                 estimate std.error statistic  p.value conf.low conf.high #>   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 (Intercept)             0.376  0.0760     -12.9   7.13e-38    0.324     0.436 #> 2 DISEASE_COURSESPMS      0.564  0.0404     -14.2   1.44e-45    0.521     0.611 #> 3 AGE                     1.00   0.00152      1.88  6.02e- 2    1.00      1.01  #> 4 SEXMale                 0.980  0.0305      -0.667 5.05e- 1    0.923     1.04  #> 5 RACEWhite               1.12   0.0525       2.11  3.47e- 2    1.01      1.24  #> 6 TIME_SINCE_DIAGNOSIS    1.00   0.000759     1.50  1.35e- 1    1.00      1.00"},{"path":"https://davidherman94.github.io/revents/articles/database_layout.html","id":"data-layout-modelling-recurrent-events","dir":"Articles","previous_headings":"","what":"Data layout modelling recurrent events","title":"04. Data layout for recurrent event analyses","text":"Data layout recurrent events constitute essential first step modelling mainly determined model’s assumptions. Starting first raw data (df_revents), need derive necessary columns analysis recurrent events. First step, necessary get time interval (TSTART, TSTOP TGAP) observation well sequence event total number events experienced patient. following code snippet shows derive columns. Following , rest variables needs joined original dataset id. following code snippet shows join variables. type layout obtained typical layout used survival-based models. can essentially differentiated time scale used (CT, TT GT) occurrence successive events. conditional marginals rate base models, subject assumed risk subsequent event current event finished. However, marginal hazards models (WLW LWA) assumption different, participant simultaneously risk occurrence event beginning study.","code":"# Load the simulated data # Define the file path file_path_data_csv <- \"C:/Users/david/revents/inst/simulated_data.csv\"  # Read the CSV file df_revents <- read.csv(file_path_data_csv) final_relapses <- df_revents %>%   dplyr::select(id, time, status) %>%   #Pivot dataset   pivot_longer(!id, names_to = \"STATUS\", values_to = \"TIME\")%>%   #There were some duplicates because of the merge so I deleted them   distinct()%>%   #Define the censoring flag   mutate(STATUS = ifelse(STATUS == \"time\", 1, 0)) %>%   #Define tstart and tstop   group_by(id) %>%   arrange(id,TIME) %>%   mutate(TSTART = replace_na(lag(TIME),0)) %>%   rename(TSTOP = TIME) %>%     # remove rows where TSTART == TSTOP == 0 ó 1   filter(!(TSTART == TSTOP & TSTART %in% c(0, 1))) %>%   mutate(PARAMCD = \"ARR\", # parameter code \"Anualized relapse rate\"          TGAP = TSTOP - TSTART, # time between events          SEVENT = row_number()) %>% # sequence number of event per id   dplyr::select(id, PARAMCD, TSTART, TSTOP, TGAP, STATUS, SEVENT) # joining adjusting variables from original df df_filter <- df_revents %>%   dplyr::select(id, Age, Sex, mstype, Race, Time_since_diagnosis)  # Perform the left join data_layout_1 <- final_relapses %>%   left_join(df_filter, by = \"id\", relationship = \"many-to-many\") %>%   group_by(id) %>%   arrange(id, TSTOP) %>%   rename(ID = id,          AGE = Age,          SEX = Sex,          DISEASE_COURSE = mstype,          RACE = Race,          TIME_SINCE_DIAGNOSIS = Time_since_diagnosis) %>%   distinct()"},{"path":"https://davidherman94.github.io/revents/articles/database_layout.html","id":"data-layout-conditional-and-marginal-rates-models","dir":"Articles","previous_headings":"Data layout modelling recurrent events","what":"Data Layout: Conditional and marginal rates models","title":"04. Data layout for recurrent event analyses","text":"illustrate differences, Table 1 displayed data layout conditionals marginals rate-based models. variable Id unique patient identifier. Tstart Tstop represent time interval observation Tgap difference time observations. Event (0 1) represents whether event occurs end time interval. event observed time Tstop, Event equal 1. Tstop right censoring time Event equal 0. Sevent records event sequence patient, necessary stratified models PWP WLW. Disease course defines patient’s group study RRMS SPMS. data layout 1, patients without relapses 1 line, whereas patients least one event 1 line, last line corresponding time right-censoring. Table 1. Data layout 1: conditionals marginals rate models.","code":"kbl(data_layout_1[1:10,]) %>%   kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))"},{"path":"https://davidherman94.github.io/revents/articles/database_layout.html","id":"data-layout-marginal-wlwlwa-models","dir":"Articles","previous_headings":"Data layout modelling recurrent events","what":"Data Layout: Marginal WLW/LWA models","title":"04. Data layout for recurrent event analyses","text":"Data layout 2 WLW LWA arranged participant number entries (Table 2). means id many lines maximum number events observed. example, maximum number Sevent defined Sevent 7. Table 2. Data layout 2: WLW LWA marginals hazards models.","code":"# Find the maximum SEVENT value in your data max_SEVENT <- max(data_layout_1$SEVENT)  # Create a data frame with all combinations of USUBJID and SEVENT combinations <- expand.grid(ID = unique(data_layout_1$ID), SEVENT = 1:max_SEVENT)  # Merge the original data frame with all combinations of USUBJID and SEVENT data_layout_2 <-    merge(combinations, data_layout_1,       by = c(\"ID\", \"SEVENT\"),       all.x = TRUE     ) %>%     arrange(ID, SEVENT) %>%   # select only necessary variables (TGAP are not necessary in this layout)     dplyr::select(-TGAP) %>%   # fill in missing values by repeating the value of the last cell     fill(PARAMCD, TSTOP, STATUS, SEVENT, DISEASE_COURSE, SEX, AGE, RACE,       TIME_SINCE_DIAGNOSIS     ) kbl(data_layout_2[1:20,]) %>%   kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))"},{"path":"https://davidherman94.github.io/revents/articles/database_layout.html","id":"data-layout-count-based-models","dir":"Articles","previous_headings":"Data layout modelling recurrent events","what":"Data Layout: Count-based models","title":"04. Data layout for recurrent event analyses","text":"classical count-based models Poisson regression, participant contributes one record, includes number events main outcome total length follow-(Table 3). Data layout 3, Id represents unique identifier individual, Disease Course type disease, Count total number observations total Length Time since study start. Table 3. Data layout 3: count-based models.","code":"data_layout_3 <- data_layout_1 %>%     group_by(ID) %>%     reframe(       DISEASE_COURSE = first(DISEASE_COURSE),       COUNT = as.numeric(sum(STATUS == 1)), # total number of events        LENGHT.TIME = last(TSTOP),       AGE = first(AGE),       SEX = first(SEX),       RACE = first(RACE),       TIME_SINCE_DIAGNOSIS = first(TIME_SINCE_DIAGNOSIS)) kbl(data_layout_3[1:10,]) %>%   kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\")) save_data_layout <- function(data_layout, file_name) {   file_path_data_csv <- paste0(\"C:/Users/david/revents/inst/\", file_name, \".csv\")      write.csv(as.data.frame(data_layout), file_path_data_csv) }  # Save the data layouts for future use save_data_layout(data_layout_1, \"data_layout_1\") save_data_layout(data_layout_2, \"data_layout_2\") save_data_layout(data_layout_3, \"data_layout_3\")"},{"path":"https://davidherman94.github.io/revents/articles/descriptive_analyses.html","id":"baseline-characteristics","dir":"Articles","previous_headings":"","what":"Baseline characteristics","title":"03. Descriptive analyses in recurrent event endpoints","text":"total simulated participants, 60.2% (721/1313) RRMS diagnosis remaining 39.8% (522/1313) SPMS diagnosis. mean age RRMS population lower SPMS population. participants female white groups. SPMS group exhibited longer mean duration since diagnosis, averaging 24 years. Additionally, mean EDSS score higher (mean = 6.5). Regarding outcome description groups, total 1255 relapses end follow-. simulation, 73.9 (971/1313) participants least one relapses, maximum 10 relapses observed (Table 1). proportion events per group started different 4th event, higher number relapses observed RRMS group. Table 1. Baseline characteristics study population disease course. Baseline characteristics (N = 1313) Figure 1. Distribution number relapses study population  can see general distribution relapses study population, order first idea data distribution. majority participants 2 relapse end follow-proportion patients 2 relapses decreased number relapses increased. improved way illustrate recurrent events, using plotEvent Recur functions reReg Reda packages. Recur package provides several types plots recommended recurrent event endpoints relapses (https://www.sychiou.com/reReg/articles/reReg-plot.html) gives better understanding finding patterns recurrent event data. Figure 2. Recurrent relapses following-.  Mean cumulative function describe recurrent event data also estimated mean cumulative function (MCF), recommended illustrating recurrent events compared Kaplan–Meier curves look first event. MCF represents average number cumulative events experienced individual study point time since start follow-. performing function, can used row data (df_revents) data layout 1 (database layout section) need event time TSTOP, respectively. Overall, figure 1 shows cumulative rates relapses RRMS SPMS groups varies time. x-axis time since study entry years y-axis represents average number relapses individual experienced follow-. example, year 5, MCF value RRMS close 2, means RRMS patients experienced, average, 2 relapses first 5 years follow-study compared MCF 1 (average 1 relapse) SPMS diagnostic patients year. Therefore, graph can broadly see RRMS group doubles avareage number relapses compared SPMS group. graph also possible extract information related relapse rates time, useful several recurrent event models’ assumptions. case, can also seen cumulative mean relapses approximately linear groups, suggesting constant rates events time. Figure 2. Mean Cumulative Function ARR disease course.","code":"one_row_df$RELAPSE <- factor(one_row_df$RELAPSE)  descriptive_table <-    one_row_df %>%   droplevels() %>%   tbl_summary(include = c(Age,                            Sex,                            Race,                           Time_since_diagnosis,                           EDSS_overall,                           RELAPSE),               by = mstype,               statistic = list(                 all_continuous() ~ \"{mean} ({sd})\"               ),               digits = all_continuous() ~ 1,                     label = list(         Age = \"Age (years)\",         Sex = \"Sex\",         Race = \"Race\",         EDSS_overall = \"EDSS overall\",         mstype = \"Disease course\",         Time_since_diagnosis = \"Time since diagnosis (years)\",         RELAPSE = \"n° of relapses\"         ),         missing_text = \"(Missing)\") %>%     modify_header(label = \"**Characteristics**\") %>%     modify_caption(\"**Baseline characteristics** (N = {N})\") %>%     bold_labels() %>%     italicize_levels() # Print the table descriptive_table ### Number of relpases bar chart ### relapse_counts_plot <- one_row_df %>%   group_by(RELAPSE) %>%   summarise(count = n()) %>%   mutate(proportion = count / sum(count) * 100)   number.relapses <- ggplot(relapse_counts_plot, aes(x = factor(RELAPSE), y = proportion)) +   geom_bar(stat = \"identity\") +   geom_text(aes(label = paste0(\"(n = \", count, \")\")), vjust = -0.5, size = 3) +   labs(x = \"Number of events\", y = \"Proportion of patients\") +   theme_minimal() +   scale_fill_manual(values = c(\"Relapses\" = \"red\")) +   scale_y_continuous(breaks = seq(0, 100, by = 20), limits = c(0, 100)) +   theme(panel.grid = element_blank(),         legend.position = \"none\",         axis.text = element_text(size = 11),         axis.title.x = element_text(size = 11),         axis.title.y = element_text(size = 11))   print(number.relapses) comparison_group <- plotEvents(Recur(   time, id, status) ~ mstype,   data = df_revents)  labels <- c(\"RRMS\", \"SPMS\")  comparison_group +   facet_grid(     mstype ~ .,     scales = \"free\",     space = \"free\",     switch = \"both\",     labeller = labeller(labels, label_parsed)   ) +    xlab(\"Subject\") +   ylab(\"Time since start of the study (years)\") +   theme(     axis.text = element_text(size = 10),      legend.text = element_text(size = 10),      axis.title = element_text(size = 10),     legend.title = element_text(size = 10),     strip.text = element_text(size = 8),     panel.border = element_rect(color = \"black\", fill = NA, linewidth = 1)   ) # Load data layout corresponding to the third layout file_path_data_csv <- \"C:/Users/david/revents/inst/data_layout_1.csv\"  data_layout_1 <- read.csv(file_path_data_csv) # origin: time origin of all subjects (0 default) # recur function from reda packagem # check none to avoid errors (subjects having events at or after censoring) mcf.relapse <- mcf(Recur(TSTOP, ID, STATUS, origin = 0, check = \"none\") ~ DISEASE_COURSE, data = data_layout_1) mcf_plot.relapses <-   plot(     mcf.relapse,     mcf = TRUE,     conf.int = FALSE,     lty = 1:4,     legendName = \"Disease course\"   ) +   ggplot2::xlab(\"Time since study entry (years)\") +   ggplot2::ylab(\"Mean cumulative function (n\\u00B0 relapses)\") +   ggplot2::theme_bw() +   ggplot2::theme(panel.grid = element_blank(),                  axis.text = ggplot2::element_text(size = 12),                  axis.title.x = ggplot2::element_text(size = 12),                  axis.title.y = ggplot2::element_text(size = 12)) +    ggplot2::scale_y_continuous(breaks = seq(0, 5, by = 1), limits = c(0, 5)) mcf_plot.relapses"},{"path":"https://davidherman94.github.io/revents/articles/event_specific_estimates.html","id":"pwp-event-specific-effect","dir":"Articles","previous_headings":"","what":"PWP (event-specific effect)","title":"08. Event-specific estimates","text":"","code":"pwp.ev.sp.relapses <- coxph(Surv(TSTART, TSTOP, STATUS) ~ strata(SEVENT)/(DISEASE_COURSE +      AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS),      data = subset(data_layout_1,SEVENT <= 3))  pwp.ev.sp.relapses #> Call: #> coxph(formula = Surv(TSTART, TSTOP, STATUS) ~ strata(SEVENT)/(DISEASE_COURSE +  #>     AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS), data = subset(data_layout_1,  #>     SEVENT <= 3)) #>  #>                                                   coef  exp(coef)   se(coef) #> strata(SEVENT)SEVENT=1:DISEASE_COURSESPMS   -0.5065415  0.6025760  0.1169950 #> strata(SEVENT)SEVENT=2:DISEASE_COURSESPMS   -0.4000706  0.6702727  0.0951328 #> strata(SEVENT)SEVENT=3:DISEASE_COURSESPMS   -0.6753986  0.5089535  0.0815047 #> strata(SEVENT)SEVENT=1:AGE                   0.0001745  1.0001746  0.0045354 #> strata(SEVENT)SEVENT=2:AGE                   0.0030625  1.0030672  0.0037363 #> strata(SEVENT)SEVENT=3:AGE                   0.0040275  1.0040356  0.0032280 #> strata(SEVENT)SEVENT=1:SEXMale               0.1992437  1.2204793  0.0883283 #> strata(SEVENT)SEVENT=2:SEXMale               0.0786923  1.0818714  0.0765383 #> strata(SEVENT)SEVENT=3:SEXMale              -0.1086089  0.8970812  0.0638742 #> strata(SEVENT)SEVENT=1:RACEWhite            -0.1131750  0.8929943  0.1414812 #> strata(SEVENT)SEVENT=2:RACEWhite            -0.1078261  0.8977837  0.1480753 #> strata(SEVENT)SEVENT=3:RACEWhite             0.1106861  1.1170442  0.1111451 #> strata(SEVENT)SEVENT=1:TIME_SINCE_DIAGNOSIS  0.0032136  1.0032188  0.0019227 #> strata(SEVENT)SEVENT=2:TIME_SINCE_DIAGNOSIS  0.0027591  1.0027629  0.0019633 #> strata(SEVENT)SEVENT=3:TIME_SINCE_DIAGNOSIS  0.0020297  1.0020317  0.0016333 #>                                                  z        p #> strata(SEVENT)SEVENT=1:DISEASE_COURSESPMS   -4.330 1.49e-05 #> strata(SEVENT)SEVENT=2:DISEASE_COURSESPMS   -4.205 2.61e-05 #> strata(SEVENT)SEVENT=3:DISEASE_COURSESPMS   -8.287  < 2e-16 #> strata(SEVENT)SEVENT=1:AGE                   0.038   0.9693 #> strata(SEVENT)SEVENT=2:AGE                   0.820   0.4124 #> strata(SEVENT)SEVENT=3:AGE                   1.248   0.2121 #> strata(SEVENT)SEVENT=1:SEXMale               2.256   0.0241 #> strata(SEVENT)SEVENT=2:SEXMale               1.028   0.3039 #> strata(SEVENT)SEVENT=3:SEXMale              -1.700   0.0891 #> strata(SEVENT)SEVENT=1:RACEWhite            -0.800   0.4238 #> strata(SEVENT)SEVENT=2:RACEWhite            -0.728   0.4665 #> strata(SEVENT)SEVENT=3:RACEWhite             0.996   0.3193 #> strata(SEVENT)SEVENT=1:TIME_SINCE_DIAGNOSIS  1.671   0.0946 #> strata(SEVENT)SEVENT=2:TIME_SINCE_DIAGNOSIS  1.405   0.1599 #> strata(SEVENT)SEVENT=3:TIME_SINCE_DIAGNOSIS  1.243   0.2140 #>  #> Likelihood ratio test=153.9  on 15 df, p=< 2.2e-16 #> n= 3823, number of events= 2580"},{"path":"https://davidherman94.github.io/revents/articles/event_specific_estimates.html","id":"wlw-event-specific-effect","dir":"Articles","previous_headings":"","what":"WLW (event-specific effect)","title":"08. Event-specific estimates","text":"","code":"wlw.ev.sp.relapses <- coxph(Surv(TSTOP, STATUS) ~ strata(SEVENT)/(DISEASE_COURSE + AGE + SEX +      RACE + TIME_SINCE_DIAGNOSIS) + cluster(ID),      data = subset(data_layout_1,SEVENT <= 3))  wlw.ev.sp.relapses #> Call: #> coxph(formula = Surv(TSTOP, STATUS) ~ strata(SEVENT) + strata(SEVENT):DISEASE_COURSE +  #>     strata(SEVENT):AGE + strata(SEVENT):SEX + strata(SEVENT):RACE +  #>     strata(SEVENT):TIME_SINCE_DIAGNOSIS, data = subset(data_layout_1,  #>     SEVENT <= 3), cluster = ID) #>  #>                                                   coef  exp(coef)   se(coef) #> strata(SEVENT)SEVENT=1:DISEASE_COURSESPMS   -0.5065415  0.6025760  0.1169950 #> strata(SEVENT)SEVENT=2:DISEASE_COURSESPMS   -0.4404396  0.6437533  0.0947142 #> strata(SEVENT)SEVENT=3:DISEASE_COURSESPMS   -0.7281646  0.4827943  0.0816680 #> strata(SEVENT)SEVENT=1:AGE                   0.0001745  1.0001746  0.0045354 #> strata(SEVENT)SEVENT=2:AGE                   0.0029697  1.0029741  0.0037188 #> strata(SEVENT)SEVENT=3:AGE                   0.0029396  1.0029439  0.0032037 #> strata(SEVENT)SEVENT=1:SEXMale               0.1992437  1.2204793  0.0883283 #> strata(SEVENT)SEVENT=2:SEXMale               0.0878825  1.0918598  0.0765051 #> strata(SEVENT)SEVENT=3:SEXMale              -0.0283382  0.9720596  0.0637972 #> strata(SEVENT)SEVENT=1:RACEWhite            -0.1131750  0.8929943  0.1414812 #> strata(SEVENT)SEVENT=2:RACEWhite            -0.1356986  0.8731057  0.1478525 #> strata(SEVENT)SEVENT=3:RACEWhite            -0.0103108  0.9897421  0.1111327 #> strata(SEVENT)SEVENT=1:TIME_SINCE_DIAGNOSIS  0.0032136  1.0032188  0.0019227 #> strata(SEVENT)SEVENT=2:TIME_SINCE_DIAGNOSIS  0.0032351  1.0032404  0.0019462 #> strata(SEVENT)SEVENT=3:TIME_SINCE_DIAGNOSIS  0.0027669  1.0027708  0.0016681 #>                                              robust se       z        p #> strata(SEVENT)SEVENT=1:DISEASE_COURSESPMS    0.1087082  -4.660 3.17e-06 #> strata(SEVENT)SEVENT=2:DISEASE_COURSESPMS    0.0966364  -4.558 5.17e-06 #> strata(SEVENT)SEVENT=3:DISEASE_COURSESPMS    0.0715327 -10.179  < 2e-16 #> strata(SEVENT)SEVENT=1:AGE                   0.0041946   0.042   0.9668 #> strata(SEVENT)SEVENT=2:AGE                   0.0038243   0.777   0.4374 #> strata(SEVENT)SEVENT=3:AGE                   0.0029963   0.981   0.3266 #> strata(SEVENT)SEVENT=1:SEXMale               0.0837183   2.380   0.0173 #> strata(SEVENT)SEVENT=2:SEXMale               0.0771347   1.139   0.2546 #> strata(SEVENT)SEVENT=3:SEXMale               0.0582100  -0.487   0.6264 #> strata(SEVENT)SEVENT=1:RACEWhite             0.1270028  -0.891   0.3729 #> strata(SEVENT)SEVENT=2:RACEWhite             0.1162681  -1.167   0.2432 #> strata(SEVENT)SEVENT=3:RACEWhite             0.1162035  -0.089   0.9293 #> strata(SEVENT)SEVENT=1:TIME_SINCE_DIAGNOSIS  0.0015630   2.056   0.0398 #> strata(SEVENT)SEVENT=2:TIME_SINCE_DIAGNOSIS  0.0016149   2.003   0.0451 #> strata(SEVENT)SEVENT=3:TIME_SINCE_DIAGNOSIS  0.0015270   1.812   0.0700 #>  #> Likelihood ratio test=179.2  on 15 df, p=< 2.2e-16 #> n= 3823, number of events= 2580"},{"path":"https://davidherman94.github.io/revents/articles/event_specific_estimates.html","id":"pcrb-event-specific-effect","dir":"Articles","previous_headings":"","what":"PCRB (event-specific effect)","title":"08. Event-specific estimates","text":"PWP PCRB models provide point estimates differences 95% confidence intervals due lack time dependent covariates conditional model. risk second third relapse 33% 50% significantly lower SPMS participants RRMS group models. WLW, risk 2nd 3rd relapse also significantly lower (36% 52% respectively) SPMS group.","code":"prcb.relapses <- coxph(Surv(TSTART, TSTOP, STATUS) ~ strata(SEVENT)/(DISEASE_COURSE + AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS) + cluster(ID), data = subset(data_layout_1,SEVENT <= 3))  prcb.relapses #> Call: #> coxph(formula = Surv(TSTART, TSTOP, STATUS) ~ strata(SEVENT) +  #>     strata(SEVENT):DISEASE_COURSE + strata(SEVENT):AGE + strata(SEVENT):SEX +  #>     strata(SEVENT):RACE + strata(SEVENT):TIME_SINCE_DIAGNOSIS,  #>     data = subset(data_layout_1, SEVENT <= 3), cluster = ID) #>  #>                                                   coef  exp(coef)   se(coef) #> strata(SEVENT)SEVENT=1:DISEASE_COURSESPMS   -0.5065415  0.6025760  0.1169950 #> strata(SEVENT)SEVENT=2:DISEASE_COURSESPMS   -0.4000706  0.6702727  0.0951328 #> strata(SEVENT)SEVENT=3:DISEASE_COURSESPMS   -0.6753986  0.5089535  0.0815047 #> strata(SEVENT)SEVENT=1:AGE                   0.0001745  1.0001746  0.0045354 #> strata(SEVENT)SEVENT=2:AGE                   0.0030625  1.0030672  0.0037363 #> strata(SEVENT)SEVENT=3:AGE                   0.0040275  1.0040356  0.0032280 #> strata(SEVENT)SEVENT=1:SEXMale               0.1992437  1.2204793  0.0883283 #> strata(SEVENT)SEVENT=2:SEXMale               0.0786923  1.0818714  0.0765383 #> strata(SEVENT)SEVENT=3:SEXMale              -0.1086089  0.8970812  0.0638742 #> strata(SEVENT)SEVENT=1:RACEWhite            -0.1131750  0.8929943  0.1414812 #> strata(SEVENT)SEVENT=2:RACEWhite            -0.1078261  0.8977837  0.1480753 #> strata(SEVENT)SEVENT=3:RACEWhite             0.1106861  1.1170442  0.1111451 #> strata(SEVENT)SEVENT=1:TIME_SINCE_DIAGNOSIS  0.0032136  1.0032188  0.0019227 #> strata(SEVENT)SEVENT=2:TIME_SINCE_DIAGNOSIS  0.0027591  1.0027629  0.0019633 #> strata(SEVENT)SEVENT=3:TIME_SINCE_DIAGNOSIS  0.0020297  1.0020317  0.0016333 #>                                              robust se      z        p #> strata(SEVENT)SEVENT=1:DISEASE_COURSESPMS    0.1087082 -4.660 3.17e-06 #> strata(SEVENT)SEVENT=2:DISEASE_COURSESPMS    0.0969919 -4.125 3.71e-05 #> strata(SEVENT)SEVENT=3:DISEASE_COURSESPMS    0.0713733 -9.463  < 2e-16 #> strata(SEVENT)SEVENT=1:AGE                   0.0041946  0.042   0.9668 #> strata(SEVENT)SEVENT=2:AGE                   0.0038467  0.796   0.4260 #> strata(SEVENT)SEVENT=3:AGE                   0.0028922  1.393   0.1638 #> strata(SEVENT)SEVENT=1:SEXMale               0.0837183  2.380   0.0173 #> strata(SEVENT)SEVENT=2:SEXMale               0.0766892  1.026   0.3048 #> strata(SEVENT)SEVENT=3:SEXMale               0.0570834 -1.903   0.0571 #> strata(SEVENT)SEVENT=1:RACEWhite             0.1270028 -0.891   0.3729 #> strata(SEVENT)SEVENT=2:RACEWhite             0.1173143 -0.919   0.3580 #> strata(SEVENT)SEVENT=3:RACEWhite             0.1070650  1.034   0.3012 #> strata(SEVENT)SEVENT=1:TIME_SINCE_DIAGNOSIS  0.0015630  2.056   0.0398 #> strata(SEVENT)SEVENT=2:TIME_SINCE_DIAGNOSIS  0.0015624  1.766   0.0774 #> strata(SEVENT)SEVENT=3:TIME_SINCE_DIAGNOSIS  0.0013680  1.484   0.1379 #>  #> Likelihood ratio test=153.9  on 15 df, p=< 2.2e-16 #> n= 3823, number of events= 2580"},{"path":"https://davidherman94.github.io/revents/articles/marginal_models.html","id":"wei-lin-weissfeld-wlw-overall-effect","dir":"Articles","previous_headings":"","what":"Wei-Lin-Weissfeld (WLW) (overall effect)","title":"07. Marginal models in recurrent events","text":"Compared models events happen successively, WLW method well suited multi-type event data natural order repeated events predictable. WLW model tend yield biased estimates recurrent event analyses (usually overestimation true effect) due strong assumption patients included risk set relapse stratum, allowing effect earlier events affect subsequent events. However, can see study, WLW model may underestimate true effect disease course risk relapses SPMS group.","code":"wlw.relapses <- coxph(Surv(TSTOP, STATUS) ~ (DISEASE_COURSE + AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS) + cluster(ID) + strata(SEVENT), data = data_layout_2)  wlw.relapses #> Call: #> coxph(formula = Surv(TSTOP, STATUS) ~ DISEASE_COURSE + AGE +  #>     SEX + RACE + TIME_SINCE_DIAGNOSIS + strata(SEVENT), data = data_layout_2,  #>     cluster = ID) #>  #>                            coef  exp(coef)   se(coef)  robust se       z #> DISEASE_COURSESPMS   -0.2936479  0.7455390  0.0226855  0.0188054 -15.615 #> AGE                   0.0015116  1.0015127  0.0009128  0.0008701   1.737 #> SEXMale              -0.0009643  0.9990362  0.0179781  0.0161890  -0.060 #> RACEWhite             0.0552958  1.0568532  0.0313109  0.0308863   1.790 #> TIME_SINCE_DIAGNOSIS  0.0007236  1.0007239  0.0004167  0.0002441   2.965 #>                            p #> DISEASE_COURSESPMS   < 2e-16 #> AGE                  0.08234 #> SEXMale              0.95250 #> RACEWhite            0.07341 #> TIME_SINCE_DIAGNOSIS 0.00303 #>  #> Likelihood ratio test=232.6  on 5 df, p=< 2.2e-16 #> n= 15756, number of events= 14501"},{"path":"https://davidherman94.github.io/revents/articles/marginal_models.html","id":"lee-wei-amato-model-lwa","dir":"Articles","previous_headings":"","what":"Lee-Wei-Amato model (LWA)","title":"07. Marginal models in recurrent events","text":"difference WLW, LWA common baseline hazard unrestricted risk set developed aim study clustered data siblings. model often provide bias estimates effect allows subject risk several events simultaneously.","code":"lwa.relapses <- coxph(Surv(TSTOP, STATUS) ~ (DISEASE_COURSE + AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS) + cluster(ID), data = data_layout_2)  lwa.relapses #> Call: #> coxph(formula = Surv(TSTOP, STATUS) ~ DISEASE_COURSE + AGE +  #>     SEX + RACE + TIME_SINCE_DIAGNOSIS, data = data_layout_2,  #>     cluster = ID) #>  #>                            coef  exp(coef)   se(coef)  robust se       z #> DISEASE_COURSESPMS   -0.2124480  0.8086023  0.0224830  0.0119610 -17.762 #> AGE                   0.0011858  1.0011865  0.0009147  0.0005862   2.023 #> SEXMale              -0.0082235  0.9918102  0.0179757  0.0106347  -0.773 #> RACEWhite             0.0476025  1.0487537  0.0312979  0.0210217   2.264 #> TIME_SINCE_DIAGNOSIS  0.0003828  1.0003828  0.0004138  0.0001327   2.884 #>                            p #> DISEASE_COURSESPMS   < 2e-16 #> AGE                  0.04307 #> SEXMale              0.43936 #> RACEWhite            0.02355 #> TIME_SINCE_DIAGNOSIS 0.00393 #>  #> Likelihood ratio test=126  on 5 df, p=< 2.2e-16 #> n= 15756, number of events= 14501"},{"path":"https://davidherman94.github.io/revents/articles/marginal_models.html","id":"lin-wei-yang-ying-lwyy","dir":"Articles","previous_headings":"","what":"Lin-Wei-Yang-Ying (LWYY)","title":"07. Marginal models in recurrent events","text":"LWYY can seen analogue AG model, less stronger assumptions allows arbitrary dependence structure recurrent events varying rate function time. NB model one used rate-based models recurrent event analyses absence terminal events negligible mortality clinical trial designs. Even though AG (robust SE) LWYY similar numerical values without time dependant covariates, model different ratios (AG models intensity function marginal rates model models rate events). example, partially considering dependency structure, LWYY model estimated similar risk reduction AG model 44% (RR: 0.57) SPMS group compared RRMS.","code":"lwyy.relapses <- coxph(Surv(TSTART, TSTOP, STATUS) ~ DISEASE_COURSE + AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS + cluster(ID), data = data_layout_1)  lwyy.relapses #> Call: #> coxph(formula = Surv(TSTART, TSTOP, STATUS) ~ DISEASE_COURSE +  #>     AGE + SEX + RACE + TIME_SINCE_DIAGNOSIS, data = data_layout_1,  #>     cluster = ID) #>  #>                            coef  exp(coef)   se(coef)  robust se       z #> DISEASE_COURSESPMS   -0.5718587  0.5644753  0.0403615  0.0279727 -20.443 #> AGE                   0.0028656  1.0028697  0.0015249  0.0013003   2.204 #> SEXMale              -0.0203516  0.9798541  0.0305203  0.0248691  -0.818 #> RACEWhite             0.1109051  1.1172889  0.0525239  0.0489264   2.267 #> TIME_SINCE_DIAGNOSIS  0.0011352  1.0011358  0.0007586  0.0003872   2.932 #>                            p #> DISEASE_COURSESPMS   < 2e-16 #> AGE                  0.02754 #> SEXMale              0.41316 #> RACEWhite            0.02340 #> TIME_SINCE_DIAGNOSIS 0.00337 #>  #> Likelihood ratio test=290.9  on 5 df, p=< 2.2e-16 #> n= 6347, number of events= 5092"},{"path":"https://davidherman94.github.io/revents/articles/revents.html","id":"recurrent-events-methods","dir":"Articles","previous_headings":"","what":"1. Recurrent events methods","title":"01. Recurrent events methods: definition and outcomes in multiple sclerosis","text":"variety counts survival statistical methods, called recurrent events methods, developed correct estimation repeated events take account events occurring first event. Recurrent events refer repeated occurrence type event time individual, hospitalizations, asthma attacks multiple sclerosis relapses disability progressions. Although recurrent events can also consider terminal events (.e. death), MS likelihood terminal events low interest recurrent events methods rely non-terminal events. Recurrent events characterized five main components: time scale defined calendar time (time measured time origin) gap time (time reset zero event); risk interval defines individual risk event along given timescale; risk set number individuals risk given point time event-specific common baseline hazard way handling within-subject correlation, can conditional, marginal random effects. risk interval key concept recurrent events allows define whether model either marginal conditional. can categorized counting process, total time, gap time (Figure 1). counting process uses calendar time time scale considers also left truncation (.e. delayed entry). example, individual B -risk first event [0, 7) second, third fourth event [7, 11), [11, 16) [16, 25), respectively. individual -risk specific event previous event observed. Total time corresponds time time since beginning observation study. instance, individual B -risk first event time interval [0, 7), second event [0, 11), third event [0, 16) fourth event [0, 25). hand, gap time time prior event. individual B assumed risk first event [0, 7) second, third fourth event [0, 4), [0, 4) [0, 9). Figure 1. Risk intervals illustration recurrent event data four hypothetical individuals. Another important concept recurrent event methods type intervention effect measure obtained. Methods can based cumulative events (number events end study), event rate (number events per unit time), time event (time successive events) gap time (times successive events accounted). Event rate models yield rate ratio (RR) estimation measure (.e. Poisson negative binomial models), models based time--event (.e. CoxPH) provide hazard ratio (HR) measure effect.","code":""},{"path":"https://davidherman94.github.io/revents/articles/revents.html","id":"multiple-sclerosis-and-associated-clinical-outcomes","dir":"Articles","previous_headings":"","what":"2. Multiple Sclerosis and associated clinical outcomes","title":"01. Recurrent events methods: definition and outcomes in multiple sclerosis","text":"Relapses disability progression main outcomes evaluate disease progression MS. Disability progression often measured changes Expanded Disability Status Scale (EDSS), ranges 0 10, higher score indicating severe disease. changes frequent primary endpoints clinical trials can derived measuring confirmed disability progressions (CDP) follow-. Relapses, mainly measured Annualized Relapse Rate (ARR) RRMS clinical trials.","code":""},{"path":"https://davidherman94.github.io/revents/articles/revents.html","id":"implementation-design-for-recurrent-events-","dir":"Articles","previous_headings":"","what":"3. Implementation design for recurrent events.","title":"01. Recurrent events methods: definition and outcomes in multiple sclerosis","text":"next step model implementation, following study design followed order evaluate de effect relapse outcomes.","code":""},{"path":"https://davidherman94.github.io/revents/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Herman. Author, maintainer. Quentin Pilard. Author. Quinten Health. Copyright holder.","code":""},{"path":"https://davidherman94.github.io/revents/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herman D. (2024). Analyzing Recurrent Events Multiple Sclerosis: Review Statistical Models Application MSOAC database. Master's thesis, EHESP. Herman D, Pilard Q (2024). “Application recurrent events methods non-terminal events.” R package version 2024.04.0.","code":"@MastersThesis{,   title = {Analyzing Recurrent Events in Multiple Sclerosis: A Review of Statistical Models with Application to MSOAC database},   author = {{Herman D.}},   school = {EHESP},   year = {2024},   institution = {Quinten Health - Biostats Team}, } @Misc{,   title = {Application of recurrent events methods in non-terminal events},   author = {David Herman and Quentin Pilard},   year = {2024},   note = {R package version 2024.04.0}, }"},{"path":"https://davidherman94.github.io/revents/index.html","id":"revents-","dir":"","previous_headings":"","what":"revents package","title":"revents package","text":"goal revents make recurrent event functions available analysing recurrent events chronic diseases. based master’s thesis: “Analysing recurrent events Multiple Sclerosis: overview statistical models application MSOAC database”.","code":""},{"path":"https://davidherman94.github.io/revents/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"revents package","text":"learn use revents vignettes, refer vignette section. vignette provides step--step guide use tutorial analyse recurrent events chronic diseases.","code":""},{"path":"https://davidherman94.github.io/revents/index.html","id":"bibliography","dir":"","previous_headings":"","what":"Bibliography","title":"revents package","text":"Amorim LD, Cai J. Modelling recurrent events: tutorial analysis epidemiology. Int J Epidemiol. 2015 Feb;44(1):324–33. Andersen PK, Gill RD. Cox’s Regression Model Counting Processes: Large Sample Study. Ann Stat. 1982;10(4):1100–20. Bühler , Wolbers M, Model F, Wang Q, Belachew S, Manfrini M, et al. Recurrent disability progression endpoints multiple sclerosis clinical trials. Mult Scler Houndmills Basingstoke Engl. 2023 Jan;29(1):130–9. Bühler , Wang Q, Wolbers M, Model F, Beyersmann J. Comparison Time--First-Event Recurrent Event Methods Multiple Sclerosis Trials. 2019. Cook RJ, Lawless J. Statistical Analysis Recurrent Events [Internet]. New York, NY: Springer; 2007 [cited 2024 Feb 13]. (Statistics Biology Health). Kelly PJ, Lim LL. Survival analysis recurrent event data: application childhood infectious diseases. Stat Med. 2000 Jan 15;19(1):13–33. Wang YC, Meyerson L, Tang YQ, Qian N. Statistical methods analysis relapse data MS clinical trials. J Neurol Sci. 2009 Oct 15;285(1):206–11.","code":""},{"path":"https://davidherman94.github.io/revents/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 revents authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://davidherman94.github.io/revents/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://davidherman94.github.io/revents/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://davidherman94.github.io/revents/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://davidherman94.github.io/revents/reference/simulated_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Recurrent event simulated data — simulated_data","title":"Recurrent event simulated data — simulated_data","text":"Recurrent events multiple sclerosis repeated relapses simulated MSOAC dataset.","code":""},{"path":"https://davidherman94.github.io/revents/reference/simulated_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recurrent event simulated data — simulated_data","text":"","code":"simulated_data"},{"path":"https://davidherman94.github.io/revents/reference/simulated_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Recurrent event simulated data — simulated_data","text":"data frame 22 rows 11 variables: Model Model name paramcd Parameter name overall_estimate Overall estimate conf.int Confidence interval conf_low Lower bound confidence interval conf_high Upper bound confidence interval p_value P-value log_likelihood Log-likelihood AIC Akaike Information Criterion BIC Bayesian Information Criterion type_model Type model","code":""},{"path":"https://davidherman94.github.io/revents/reference/simulated_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Recurrent event simulated data — simulated_data","text":"\\\"Simulated data based MSOAC dataset\"","code":""}]
