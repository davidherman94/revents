"0","# Define a function to simulate recurrent event data using reda"
"0","simulate_recurrent_event_data <- function(n, max_event, mean_follow_up_time, max_follow_up_time, mstype, outcome) {"
"0","  "
"0","  simulate_individual_data <- function(id) {"
"0","    "
"0","    # Generate baseline hazard times (exponential distribution)"
"0","    basehaz <- rexp(n = pmax(pmin(round(rnorm(1, max_event/2, max_event/4)), max_event), 1), "
"0","                    rate = 1 / mean_follow_up_time)"
"0","    basehaz <- basehaz[basehaz < max_follow_up_time]"
"0","    basehaz <- c(basehaz,max_follow_up_time)"
"0","    "
"0","    # Create a tibble for the individual's data"
"0","    tibble("
"0","      id = id,"
"0","      status = c(rep(1, length(basehaz) - 1), 0),"
"0","      time = basehaz,"
"0","      mstype = mstype,"
"0","      outcome = outcome"
"0","    )"
"0","  }"
"0","  "
"0","  # Use purrr::map_dfr to apply the helper function to each individual and combine the results"
"0","  sim_data_all <- map_dfr(1:n, simulate_individual_data) %>%"
"0","    arrange(id, time)"
"0","  "
"0","  # Return the simulated data"
"0","  return(sim_data_all)"
"0","}"
